{"version":3,"sources":["../source/DOMVirtualScroller.js"],"names":["VirtualScroller","log","px","DOMVirtualScroller","element","items","renderItem","options","state","prevState","firstShownItemIndex","lastShownItemIndex","beforeItemsHeight","afterItemsHeight","tbody","container","style","paddingTop","paddingBottom","diffRender","length","i","unmountItem","childNodes","firstChild","shouldPrependItems","prependBeforeItemElement","item","insertBefore","appendChild","console","warn","stop","virtualScroller","onMount","onItemUnmount","restOptions","tagName","onStateChange","listen","itemElement","removeChild","onItemHeightChange","newItems","setItems","getItemCoordinates"],"mappings":"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","sourcesContent":["import VirtualScroller from './VirtualScroller'\nimport log from './log'\nimport { px } from './utility'\n\nexport default class DOMVirtualScroller {\n  constructor(element, items, renderItem, options = {}) {\n    this.container = element\n    this.renderItem = renderItem\n    const {\n      onMount,\n      onItemUnmount,\n      ...restOptions\n    } = options\n    this.onItemUnmount = onItemUnmount\n    this.tbody = this.container.tagName === 'TBODY'\n    this.virtualScroller = new VirtualScroller(\n      () => this.container,\n      items,\n      {\n        ...restOptions,\n        tbody: this.tbody,\n        onStateChange: this.onStateChange\n      }\n    )\n    // `onMount()` option is deprecated due to no longer being used.\n    // If someone thinks there's a valid use case for it, create an issue.\n    if (onMount) {\n      onMount()\n    }\n    this.virtualScroller.listen()\n  }\n\n  onStateChange = (state, prevState) => {\n    const {\n      items,\n      firstShownItemIndex,\n      lastShownItemIndex,\n      beforeItemsHeight,\n      afterItemsHeight\n    } = state\n    log('~ On state change ~')\n    log('Previous state', prevState)\n    log('New state', state)\n    // Set container padding top and bottom.\n    // Work around `<tbody/>` not being able to have `padding`.\n    // https://gitlab.com/catamphetamine/virtual-scroller/-/issues/1\n    // `this.virtualScroller` hasn't been initialized yet at this stage,\n    // so using `this.tbody` instead of `this.virtualScroller.tbody`.\n    if (!this.tbody) {\n      this.container.style.paddingTop = px(beforeItemsHeight)\n      this.container.style.paddingBottom = px(afterItemsHeight)\n    }\n    // Perform an intelligent \"diff\" re-render if the `items` are the same.\n    const diffRender = prevState && items === prevState.items && items.length > 0\n    // Remove no longer visible items from the DOM.\n    if (diffRender) {\n      log('Incremental rerender')\n      // Decrement instead of increment here because\n      // `this.container.removeChild()` changes indexes.\n      let i = prevState.lastShownItemIndex\n      while (i >= prevState.firstShownItemIndex) {\n        if (i >= firstShownItemIndex && i <= lastShownItemIndex) {\n          // The item is still visible.\n        } else {\n          log('Remove item index', i)\n          // The item is no longer visible. Remove it.\n          this.unmountItem(this.container.childNodes[i - prevState.firstShownItemIndex])\n        }\n        i--\n      }\n    } else {\n      log('Rerender from scratch')\n      while (this.container.firstChild) {\n        this.unmountItem(this.container.firstChild)\n      }\n    }\n    // Add newly visible items to the DOM.\n    let shouldPrependItems = diffRender\n    const prependBeforeItemElement = shouldPrependItems && this.container.firstChild\n    let i = firstShownItemIndex\n    while (i <= lastShownItemIndex) {\n      if (diffRender && i >= prevState.firstShownItemIndex && i <= prevState.lastShownItemIndex) {\n        // The item is already being rendered.\n        // Next items will be appended rather than prepended.\n        if (shouldPrependItems) {\n          shouldPrependItems = false\n        }\n      } else {\n        const item = this.renderItem(items[i])\n        if (shouldPrependItems) {\n          log('Prepend item index', i)\n          // Append `item` to `this.container` before the retained items.\n          this.container.insertBefore(item, prependBeforeItemElement)\n        } else {\n          log('Append item index', i)\n          // Append `item` to `this.container`.\n          this.container.appendChild(item)\n        }\n      }\n      i++\n    }\n  }\n\n  // Public API. Should be \"bound\" to `this`.\n  onUnmount = () => {\n    console.warn('[virtual-scroller] `.onUnmount()` instance method name is deprecated, use `.stop()` instance method name instead.')\n    this.stop()\n  }\n\n  // Public API. Should be \"bound\" to `this`.\n  destroy = () => {\n    console.warn('[virtual-scroller] `.destroy()` instance method name is deprecated, use `.stop()` instance method name instead.')\n    this.stop()\n  }\n\n  // Public API. Should be \"bound\" to `this`.\n  stop = () => {\n    this.virtualScroller.stop()\n  }\n\n  unmountItem(itemElement) {\n    this.container.removeChild(itemElement)\n    if (this.onItemUnmount) {\n      this.onItemUnmount(itemElement)\n    }\n  }\n\n  onItemHeightChange(i) {\n    this.virtualScroller.onItemHeightChange(i)\n  }\n\n  /**\n   * @deprecated\n   * `.updateItems()` has been renamed to `.setItems()`.\n   */\n  updateItems(newItems, options) {\n    this.setItems(newItems, options)\n  }\n\n  setItems(newItems, options) {\n    this.virtualScroller.setItems(newItems, options)\n  }\n\n  getItemCoordinates(i) {\n    return this.virtualScroller.getItemCoordinates(i)\n  }\n}"],"file":"DOMVirtualScroller.js"}