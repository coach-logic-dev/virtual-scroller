{"version":3,"sources":["../source/ReactVirtualScroller.js"],"names":["elementType","PropTypes","oneOfType","string","func","object","ReactVirtualScroller","props","React","createRef","Array","items","length","virtualScroller","updateLayout","onItemInitialRender","onItemFirstRender","shouldUpdateLayoutOnWindowResize","previousItemsProperty","generateUniquePrefix","createVirtualScroller","AsComponent","as","initialState","initialCustomState","onStateChange","estimatedItemHeight","preserveScrollPositionOfTheBottomOfTheListOnMount","preserveScrollPositionAtBottomOnMount","measureItemsBatchSize","scrollableContainer","getScrollableContainer","bypass","VirtualScroller","container","current","tbody","state","customState","getState","setState","newState","willUpdateState","didUpdateState","itemComponent","isComponentClass","i","getItemCoordinates","renderItem","shouldUseRefs","console","error","itemRefs","item","forceUpdate","_isMounted","indexOf","onItemHeightChange","onItemStateChange","itemState","prefix","String","Math","random","slice","uniquePrefixes","push","uniquePrefix","onMount","listen","prevProps","prevState","preserveScrollPosition","preserveScrollPositionOnPrependItems","setItems","stop","Component","itemComponentProps","_items","className","rest","itemStates","firstShownItemIndex","lastShownItemIndex","beforeItemsHeight","afterItemsHeight","newItems","previousItems","itemsPropertyWasChanged","prependedItemsCount","appendedItemsCount","captureScroll","paddingTop","undefined","paddingBottom","map","getItemRef","getOnItemStateChange","getOnItemHeightChange","arrayOf","isRequired","array","number","bool","any","shape","itemHeights","itemSpacing","prototype","isReactComponent"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport VirtualScroller, { getItemsDiff } from \"./VirtualScroller\";\nimport { px } from \"./utility\";\n\n// `PropTypes.elementType` is available in some version of `prop-types`.\n// https://github.com/facebook/prop-types/issues/200\nconst elementType =\n  PropTypes.elementType ||\n  PropTypes.oneOfType([PropTypes.string, PropTypes.func, PropTypes.object]);\n\nexport default class ReactVirtualScroller extends React.Component {\n  static propTypes = {\n    as: elementType,\n    items: PropTypes.oneOfType([\n      PropTypes.arrayOf(PropTypes.object).isRequired,\n      PropTypes.arrayOf(PropTypes.array).isRequired,\n    ]),\n    itemComponent: elementType.isRequired,\n    itemComponentProps: PropTypes.object,\n    estimatedItemHeight: PropTypes.number,\n    bypass: PropTypes.bool,\n    // bypassBatchSize: PropTypes.number,\n    preserveScrollPositionOnPrependItems: PropTypes.bool,\n    // `preserveScrollPosition` property name is deprecated,\n    // use `preserveScrollPositionOnPrependItems` instead.\n    preserveScrollPosition: PropTypes.bool,\n    preserveScrollPositionOfTheBottomOfTheListOnMount: PropTypes.bool,\n    // `preserveScrollPositionAtBottomOnMount` property name is deprecated,\n    // use `preserveScrollPositionOfTheBottomOfTheListOnMount` property instead.\n    preserveScrollPositionAtBottomOnMount: PropTypes.bool,\n    shouldUpdateLayoutOnWindowResize: PropTypes.func,\n    measureItemsBatchSize: PropTypes.number,\n    scrollableContainer: PropTypes.any,\n    // `getScrollableContainer` property is deprecated.\n    // Use `scrollableContainer` instead.\n    getScrollableContainer: PropTypes.func,\n    className: PropTypes.string,\n    onMount: PropTypes.func,\n    onItemInitialRender: PropTypes.func,\n    // `onItemFirstRender(i)` is deprecated, use `onItemInitialRender(item)` instead.\n    onItemFirstRender: PropTypes.func,\n    onStateChange: PropTypes.func,\n    initialCustomState: PropTypes.object,\n    initialState: PropTypes.shape({\n      items: PropTypes.oneOfType([\n        PropTypes.arrayOf(PropTypes.object).isRequired,\n        PropTypes.arrayOf(PropTypes.array).isRequired,\n      ]),\n      itemStates: PropTypes.arrayOf(PropTypes.any),\n      firstShownItemIndex: PropTypes.number.isRequired,\n      lastShownItemIndex: PropTypes.number.isRequired,\n      beforeItemsHeight: PropTypes.number.isRequired,\n      afterItemsHeight: PropTypes.number.isRequired,\n      itemHeights: PropTypes.arrayOf(PropTypes.number).isRequired,\n      itemSpacing: PropTypes.number,\n    }),\n  };\n\n  static defaultProps = {\n    as: \"div\",\n  };\n\n  // `this.state` is already reserved for `virtual-scroller`.\n  // static getDerivedStateFromProps(props, state) {\n  // \treturn {\n  // \t\tprevProps: {\n  // \t\t\titems: props.items\n  // \t\t}\n  // \t}\n  // }\n\n  container = React.createRef();\n\n  // Handler function caches.\n  // Just so that the props passed to `itemComponent`\n  // are not changed on every `.render()` and so\n  // `itemComponent` won't re-render if it's a `PureComponent`.\n  onItemStateChange = new Array(this.props.items.length);\n  onItemHeightChange = new Array(this.props.items.length);\n\n  // Item refs for `.renderItem(i)`.\n  itemRefs = new Array(this.props.items.length);\n\n  // List items are rendered with `key`s\n  // so that React doesn't reuse `itemComponent`s\n  // in cases when `items` are changed.\n  uniquePrefixes = [];\n\n  constructor(props) {\n    super(props);\n    // `this.previousItemsProperty` is only used for comparing\n    // `previousItems` with `newItems` inside `render()`.\n    this.previousItemsProperty = props.items;\n    // Generate unique `key` prefix for list item components.\n    this.generateUniquePrefix();\n    // Create `VirtualScroller` instance.\n    this.createVirtualScroller();\n  }\n\n  createVirtualScroller() {\n    const {\n      as: AsComponent,\n      items,\n      initialState,\n      initialCustomState,\n      onStateChange,\n      estimatedItemHeight,\n      preserveScrollPositionOfTheBottomOfTheListOnMount,\n      // `preserveScrollPositionAtBottomOnMount` property name is deprecated,\n      // use `preserveScrollPositionOfTheBottomOfTheListOnMount` property instead.\n      preserveScrollPositionAtBottomOnMount,\n      measureItemsBatchSize,\n      scrollableContainer,\n      // `getScrollableContainer` property is deprecated.\n      // Use `scrollableContainer` instead.\n      getScrollableContainer,\n      bypass,\n      // bypassBatchSize\n    } = this.props;\n    // Create `virtual-scroller` instance.\n    this.virtualScroller = new VirtualScroller(\n      () => this.container.current,\n      items,\n      {\n        estimatedItemHeight,\n        bypass,\n        // bypassBatchSize,\n        onItemInitialRender: this.onItemInitialRender,\n        // `onItemFirstRender(i)` is deprecated, use `onItemInitialRender(item)` instead.\n        onItemFirstRender: this.onItemFirstRender,\n        preserveScrollPositionOfTheBottomOfTheListOnMount,\n        // `preserveScrollPositionAtBottomOnMount` property name is deprecated,\n        // use `preserveScrollPositionOfTheBottomOfTheListOnMount` property instead.\n        preserveScrollPositionAtBottomOnMount,\n        shouldUpdateLayoutOnWindowResize: this.shouldUpdateLayoutOnWindowResize,\n        measureItemsBatchSize,\n        scrollableContainer,\n        // `getScrollableContainer` property is deprecated.\n        // Use `scrollableContainer` instead.\n        getScrollableContainer,\n        tbody: AsComponent === \"tbody\",\n        state: initialState,\n        customState: initialCustomState,\n        onStateChange,\n        getState: () => this.state,\n        setState: (newState, { willUpdateState, didUpdateState }) => {\n          this.willUpdateState = willUpdateState;\n          this.didUpdateState = didUpdateState;\n          if (this.state) {\n            // Update existing state.\n            this.setState(newState);\n          } else {\n            // Set initial state.\n            willUpdateState(newState);\n            this.state = newState;\n            didUpdateState();\n          }\n        },\n      }\n    );\n  }\n\n  // This is a proxy for `VirtualScroller`'s `.updateLayout` instance method.\n  updateLayout = () => this.virtualScroller.updateLayout();\n\n  // `.layout()` method name is deprecated, use `.updateLayout()` instead.\n  layout = () => this.updateLayout();\n\n  // This proxy is required for cases when\n  // `onItemInitialRender` property changes at subsequent renders.\n  // For example, if it's passed as an \"anonymous\" function:\n  // `<VirtualScroller onItemInitialRender={() => ...}/>`.\n  onItemInitialRender = (...args) => {\n    const { onItemInitialRender } = this.props;\n    if (onItemInitialRender) {\n      onItemInitialRender(...args);\n    }\n  };\n\n  // This proxy is required for cases when\n  // `onItemFirstRender` property changes at subsequent renders.\n  // For example, if it's passed as an \"anonymous\" function:\n  // `<VirtualScroller onItemFirstRender={() => ...}/>`.\n  // `onItemFirstRender(i)` is deprecated, use `onItemInitialRender(item)` instead.\n  onItemFirstRender = (...args) => {\n    const { onItemFirstRender } = this.props;\n    if (onItemFirstRender) {\n      onItemFirstRender(...args);\n    }\n  };\n\n  // This proxy is required for cases when\n  // `shouldUpdateLayoutOnWindowResize` property changes at subsequent renders.\n  // For example, if it's passed as an \"anonymous\" function:\n  // `<VirtualScroller shouldUpdateLayoutOnWindowResize={() => ...}/>`.\n  shouldUpdateLayoutOnWindowResize = (...args) => {\n    const { shouldUpdateLayoutOnWindowResize } = this.props;\n    if (shouldUpdateLayoutOnWindowResize) {\n      return shouldUpdateLayoutOnWindowResize(...args);\n    }\n  };\n\n  shouldUseRefs() {\n    // There's no way to detect if `ref` can be passed to `component`:\n    // https://github.com/facebook/react/issues/16309\n    // So only uses `ref`s for `React.Component`s.\n    const { itemComponent } = this.props;\n    return isComponentClass(itemComponent);\n  }\n\n  /**\n   * A proxy to `VirtualScroller.getItemCoordinates(i)`.\n   * @param  {number} i\n   * @return {object}\n   */\n  getItemCoordinates(i) {\n    return this.virtualScroller.getItemCoordinates(i);\n  }\n\n  /**\n   * `updateItem(i)` has been renamed to `renderItem(i)`.\n   * @param {number} i\n   */\n  updateItem(i) {\n    return this.renderItem(i);\n  }\n\n  /**\n   * Re-renders an item.\n   * @param {number} i\n   */\n  renderItem(i) {\n    if (!this.shouldUseRefs()) {\n      return console.error(\n        \"[virtual-scroller] `.renderItem(i)` has been called but the `component` doesn't allow `ref`s. Only `component`s that're `React.Component`s support this feature.\"\n      );\n    }\n    // The item may be non-rendered when `.renderItem(i)` is called on it.\n    // For example, when there's a \"parent comment\" having several \"replies\"\n    // each of which has an autogenerated quote of the \"parent comment\"\n    // and then the \"parent comment\" is updated (for example, a YouTube video\n    // link gets parsed into an embedded video player) and all of its \"replies\"\n    // should be updated too to show the parsed video title instead of the URL,\n    // so `.renderItem(i)` is simply called on all of the \"parent post\"'s replies\n    // regardless of some of those replies being rendered or not.\n    if (this.itemRefs[i] && this.itemRefs[i].current) {\n      const { items } = this.props;\n      // Stores `item` here because the `i` index\n      // might have changed when the callback is called,\n      // or the item even may have been removed.\n      const item = items[i];\n      this.itemRefs[i].current.forceUpdate(() => {\n        if (this._isMounted) {\n          // Recalculates the `i` index here because it\n          // might have changed when the callback is called,\n          // or the item even may have been removed.\n          const i = items.indexOf(item);\n          if (i >= 0) {\n            this.virtualScroller.onItemHeightChange(i);\n          }\n        }\n      });\n    }\n  }\n\n  // Functional components can't have a `ref` assigned to them.\n  // Item `ref`s are only used for calling `.renderItem(i)` instance method.\n  // If a developer is not using the `.renderItem(i)` instance method\n  // then `ref`s aren't required and will be omitted.\n  getItemRef(i) {\n    if (!this.itemRefs[i]) {\n      this.itemRefs[i] = React.createRef();\n    }\n    return this.itemRefs[i];\n  }\n\n  getOnItemStateChange(i) {\n    if (!this.onItemStateChange[i]) {\n      this.onItemStateChange[i] = (itemState) =>\n        this.virtualScroller.onItemStateChange(i, itemState);\n    }\n    return this.onItemStateChange[i];\n  }\n\n  getOnItemHeightChange(i) {\n    if (!this.onItemHeightChange[i]) {\n      this.onItemHeightChange[i] = () =>\n        this.virtualScroller.onItemHeightChange(i);\n    }\n    return this.onItemHeightChange[i];\n  }\n\n  generateUniquePrefix() {\n    const prefix = String(Math.random()).slice(2);\n    if (this.uniquePrefixes.indexOf(prefix) >= 0) {\n      return this.generateUniquePrefix();\n    }\n    this.uniquePrefixes.push(prefix);\n    this.uniquePrefix = prefix;\n  }\n\n  componentDidMount() {\n    const { onMount } = this.props;\n    // `onMount()` option is deprecated due to no longer being used.\n    // If someone thinks there's a valid use case for it, create an issue.\n    if (onMount) {\n      onMount();\n    }\n    this._isMounted = true;\n    // Start listening to scroll events.\n    this.virtualScroller.listen();\n  }\n\n  // `getSnapshotBeforeUpdate()` is called right before `componentDidUpdate()`.\n  getSnapshotBeforeUpdate(prevProps, prevState) {\n    if (this.state !== prevState) {\n      this.willUpdateState(this.state, prevState);\n    }\n    // Returns `null` to avoid React warning:\n    // \"A snapshot value (or null) must be returned. You have returned undefined\".\n    return null;\n  }\n\n  // `componentDidUpdate()` is called immediately after React component has re-rendered.\n  // That would correspond to `useLayoutEffect()` in React Hooks.\n  componentDidUpdate(prevProps, prevState) {\n    // If `state` did change.\n    if (this.state !== prevState) {\n      this.didUpdateState(prevState);\n    }\n    // If `items` property did change then update `virtual-scroller` items.\n    // This could have been done in `.render()` but `.setItems()` calls\n    // `.setState()` internally which would result in React throwing an error.\n    const {\n      items,\n      preserveScrollPosition,\n      preserveScrollPositionOnPrependItems,\n    } = this.props;\n    // || JSON.stringify(items.length) === JSON.stringify(prevProps.items.length)\n    if (items.length !== prevProps.items.length) {\n      this.virtualScroller.setItems(items, {\n        // `preserveScrollPosition` property name is deprecated,\n        // use `preserveScrollPositionOnPrependItems` instead.\n        preserveScrollPositionOnPrependItems:\n          preserveScrollPositionOnPrependItems || preserveScrollPosition,\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    this._isMounted = false;\n    // Stop listening to scroll events.\n    this.virtualScroller.stop();\n  }\n\n  render() {\n    const {\n      as: AsComponent,\n      itemComponent: Component,\n      itemComponentProps,\n      // Rest\n      items: _items,\n      estimatedItemHeight,\n      bypass,\n      // bypassBatchSize,\n      preserveScrollPositionOnPrependItems,\n      // `preserveScrollPosition` property name is deprecated,\n      // use `preserveScrollPositionOnPrependItems` instead.\n      preserveScrollPosition,\n      preserveScrollPositionOfTheBottomOfTheListOnMount,\n      // `preserveScrollPositionAtBottomOnMount` property name is deprecated,\n      // use `preserveScrollPositionOfTheBottomOfTheListOnMount` property instead.\n      preserveScrollPositionAtBottomOnMount,\n      shouldUpdateLayoutOnWindowResize,\n      measureItemsBatchSize,\n      scrollableContainer,\n      // `getScrollableContainer` property is deprecated.\n      // Use `scrollableContainer` instead.\n      getScrollableContainer,\n      initialState,\n      initialCustomState,\n      onStateChange,\n      onItemInitialRender,\n      // `onItemFirstRender(i)` is deprecated, use `onItemInitialRender(item)` instead.\n      onItemFirstRender,\n      onMount,\n      className,\n      ...rest\n    } = this.props;\n    const {\n      items,\n      itemStates,\n      firstShownItemIndex,\n      lastShownItemIndex,\n      beforeItemsHeight,\n      afterItemsHeight,\n    } = this.virtualScroller.getState();\n    // If `items` are about to be changed then\n    // store the scroll Y position for the first one\n    // of the current items.\n    // Previously it was being done in `componentDidUpdate()`\n    // but it was later found out that it wouldn't work\n    // for \"Show previous\" button because it would\n    // get hidden before `componentDidUpdate()` is called.\n    //\n    // Consider this code example:\n    //\n    // const { fromIndex, items } = this.state\n    // const items = allItems.slice(fromIndex)\n    // return (\n    // \t{fromIndex > 0 &&\n    // \t\t<button onClick={this.onShowPrevious}>\n    // \t\t\tShow previous\n    // \t\t</button>\n    // \t}\n    // \t<VirtualScroller\n    // \t\titems={items}\n    // \t\titemComponent={ItemComponent}/>\n    // )\n    //\n    // Consider a user clicks \"Show previous\" to show the items from the start.\n    // By the time `componentDidUpdate()` is called on `<VirtualScroller/>`\n    // the \"Show previous\" button has already been hidden\n    // which results in the scroll Y position jumping forward\n    // by the height of the \"Show previous\" button.\n    // This is because `<VirtualScroller/>` restores scroll Y position\n    // when items are prepended via `.setItems()` and it does that\n    // when the \"Show previous\" button has already been hidden\n    // so that's the reason for the scroll Y jump.\n    //\n    // To prevent that, scroll Y position is stored at `render()` time\n    // rather than later in `componentDidUpdate()`.\n    //\n    const newItems = this.props.items;\n    const previousItems = items; // this.virtualScroller.getState().items\n    // There's one case when `newItems !== previousItems` is `true`\n    // from the start: when `initialState.items` are passed.\n    // To handle that single case `this.previousItemsProperty`\n    // is tracked and `this.itemsPropertyHasChanged` flag is set.\n    if (!this.itemsPropertyWasChanged) {\n      this.itemsPropertyWasChanged =\n        this.props.items !== this.previousItemsProperty;\n    }\n    this.previousItemsProperty = this.props.items;\n    if (this.itemsPropertyWasChanged && newItems !== previousItems) {\n      const { prependedItemsCount, appendedItemsCount } = getItemsDiff(\n        previousItems,\n        newItems\n      );\n      if (prependedItemsCount === 0 && appendedItemsCount > 0) {\n        // If it's just items that have been appended\n        // then no need to re-generate the prefix\n        // and to fix scroll position and to clear caches.\n      } else {\n        // `preserveScrollPosition` property name is deprecated,\n        // use `preserveScrollPositionOnPrependItems` instead.\n        if (preserveScrollPositionOnPrependItems || preserveScrollPosition) {\n          this.virtualScroller.captureScroll(previousItems, newItems);\n        }\n        // Reset the unique `key` prefix for item component keys.\n        this.generateUniquePrefix();\n        // Reset handler function caches.\n        this.onItemStateChange = new Array(newItems.length);\n        this.onItemHeightChange = new Array(newItems.length);\n        // Reset item refs.\n        this.itemRefs = new Array(newItems.length);\n      }\n    }\n    const tbody = this.virtualScroller.tbody;\n    return (\n      <AsComponent\n        {...rest}\n        ref={this.container}\n        className={\n          tbody\n            ? className\n              ? className + \" \" + \"VirtualScroller\"\n              : \"VirtualScroller\"\n            : className\n        }\n        style={{\n          paddingTop: tbody ? undefined : px(beforeItemsHeight),\n          paddingBottom: tbody ? undefined : px(afterItemsHeight),\n        }}\n      >\n        {items.map((item, i) => {\n          if (i >= firstShownItemIndex && i <= lastShownItemIndex) {\n            return (\n              <Component\n                {...itemComponentProps}\n                ref={this.shouldUseRefs() ? this.getItemRef(i) : undefined}\n                key={`${this.uniquePrefix}:${i}`}\n                state={itemStates && itemStates[i]}\n                onStateChange={this.getOnItemStateChange(i)}\n                onHeightChange={this.getOnItemHeightChange(i)}\n              >\n                {item}\n              </Component>\n            );\n          }\n          return null;\n        })}\n      </AsComponent>\n    );\n  }\n}\n\n/**\n * Checks if the argument is a `React.Component` class.\n * https://overreacted.io/how-does-react-tell-a-class-from-a-function/\n * @param  {any}  Component\n * @return {object} [result] Returns `undefined` if it's not a `React.Component`. Returns an empty object if it's a `React.Component` (`.isReactComponent` is an empty object).\n */\nfunction isComponentClass(Component) {\n  // return Component.prototype instanceof React.Component\n  // `React.memo()` returns `.prototype === undefined` for some reason.\n  return Component.prototype && Component.prototype.isReactComponent;\n}\n"],"file":"ReactVirtualScroller.js"}